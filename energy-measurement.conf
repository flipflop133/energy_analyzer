###############################################################################
# energy-measurement.conf — sample of *all* available options
#
# Copy to:
#   /etc/energy-measurement.conf      (system-wide, overrides script defaults)
#   ~/.config/energy-measurement.conf (per-user, overrides both)
#
# Bool values accept:  yes|no | on|off | true|false | 1|0   (case-insensitive)
###############################################################################

### ───────────────────────────────── TOP-LEVEL SWITCHES ──────────────────── ###
# Turn entire feature blocks on/off.  Leave set to "yes" for behaviour that
# matches the original script; flip to "no" to keep the system untouched.

USE_RFKILL="no"      # yes → rfkill block/unblock all radios
MANAGE_SERVICES="no" # yes → systemctl mask/stop noisy services
MANAGE_MODULES="no"  # yes → rmmod wifi / bluetooth kernel modules
TUNE_CPU="yes"       # yes → governor=userspace, fixed scaling_*_freq
TUNE_UNCORE="yes"    # yes → pin Intel Uncore freq & disable turbo boost
TUNE_GPU="yes"       # yes → constrain Intel GT min/max clocks
TUNE_AUDIO="yes"     # yes → disable snd_hda_intel power-save features
TUNE_SATA="yes"      # yes → force SATA link-power-management policy

### ───────────────────────────── SYSTEMD SERVICES ───────────────────────── ###
# Anything masked here is *guaranteed* silent during measurements.
# NB: journald may still log to /run/log/journal even if its service is stopped.
#     If that bothers you, mount /run/log as tmpfs: size=1M,mode=0755.

SERVICES_TO_DISABLE=(
    NetworkManager.service    # DHCP, wifi scan etc.
    wpa_supplicant.service    # Wi-Fi association
    ModemManager.service      # 4G/5G probing
    systemd-timesyncd.service # NTP background syncs
    systemd-journald.service  # constant disk writes
    cups.service              # printer discovery
)

### ───────────────────────────── KERNEL MODULES ─────────────────────────── ###
# Modules you *never* want loaded while benchmarking.  A safe default for most
# Intel laptops is shown; trim or extend as needed.

WIFI_BT_MODULES=(
    iwlmvm # Intel Wi-Fi
    iwlwifi
    btusb     # Bluetooth USB dongle/adapter
    bluetooth # Bluetooth core
    mac80211  # 802.11 MAC layer
    cfg80211  # wireless cfg API
)

### ───────────────────────────── CPU & UNCORE ───────────────────────────── ###
# Use lscpu or cpupower to see supported ranges.  Fixed freq removes DVFS noise.
# If you want turbo enabled but still a fixed base clock, set TUNE_UNCORE=no,
# leave boost alone, and *only* pin scaling_*_freq.

CPU_FREQ_KHZ=2400000 # 2.4 GHz on modern mobile Intel
UNC_FREQ_KHZ=2400000 # uncore bus (LLC ring)

### ───────────────────────────── GPU (Intel GT) ─────────────────────────── ###
# /sys/class/drm/<card>/gt_*_freq_mhz usually exists on Gen9+ (Skylake→)
# Use `intel_gpu_frequency | head` to discover valid values.

GPU_CARD="card0" # replace if you have multiple GPUs
GPU_MIN_FREQ_MHZ=450
GPU_MAX_FREQ_MHZ=450 # same min==max pins the clock

### ───────────────────────────── AUDIO (HDA) ────────────────────────────── ###
# Values accepted by kernel docs:
#   power_save: 0 = disable, seconds before suspend otherwise
#   power_save_controller: 0 = disable controller powersave

SND_POW_SAVE=0 # keep codec fully powered (repeatability)
SND_POW_CTRL=0

### ──────────────────────────── SATA / NVMe LPM ─────────────────────────── ###
# For pure repeatability pick max_performance; for *green* benchmarks you may
# deliberately choose slumber states and measure wake-up energy.

SATA_POLICY="max_performance"
# Alternatives: "medium_power_with_dipm" | "min_power" | "med_power_with_dipm"

###############################################################################
#                           ADVANCED / EXPERIMENTAL                           #
###############################################################################

# ── Emergency throttling test ────────────────────────────────────────────────
# Flip this on its own to *only* study RAPL + thermal limits while everything
# else stays default:
#
#     TUNE_CPU="no"
#     echo 95 > /sys/module/intel_powerclamp/parameters/TJMAX
#
# (intel_powerclamp must be built-in or loaded.)

# ── Profiles by sourcing ────────────────────────────────────────────────────
# You can chain multiple files:
#
#   baseline.conf   – strict repeatability
#   eco.conf        – realistic power-save settings
#   perf.conf       – turbo boost, governor=performance
#
# Then in your CI pipeline:
#
#   source baseline.conf   # always
#   [[ "$PROFILE" == eco  ]] && source eco.conf
#   [[ "$PROFILE" == perf ]] && source perf.conf
#
# The last assignment wins.

###############################################################################
# End of file – safe to delete anything below this line
###############################################################################
